/*****************************************************************************************
 * AUTHOR         : BRYCE BERWALD
 * Assignment #1  : Functions & Arrays
 * CLASS          : CS1B
 * SECTION        : MW 7:30-10:00PM
 * DUE DATE       : 09/17/2021 @ 11:59PM
 *****************************************************************************************/

#include "Functions.h"

string Global::inputFileName;
string Global::outputFileName;

/******************************************************************************************
 *
 * Assignment #1: CS1B - Functions & Arrays
 *
 *
 * ________________________________________________________________________________________
 *
 * Description will go here.
 *
 * ________________________________________________________________________________________
 *
 * Variables used for input and output go here.
 *
 *
 ******************************************************************************************/

int main() {

	const int MAX_VALUES = 10;          //Used to set array length values.
	int menuOptionChosen = 7;
	int calculatedIndex;
	float calculatedResult;

	//int foundPersonIndex;
	string nameSearchedFor;

	string personsFullName[MAX_VALUES]; //Array for all persons names from the input file.
	int personsID[MAX_VALUES];          //Array for all persons ID #s from the input file.
	float personsBalance[MAX_VALUES];   //Array for all persons balances from the input file.

	//Function prints header to the console.
	printHeaderToConsole();

	//Function reads file names from the user.
	readFileNames();

	//Function prints header to the output file.
	printHeaderToFile();

	//Function gathers data from the input file.
	getDataFromInputFile(personsFullName, personsID, personsBalance, MAX_VALUES);

	while (menuOptionChosen != 0) {
		//Print menu options to the console for the user.
		cout << "\nMENU OPTIONS" << endl << endl;
		cout << "1 - Find the larger balance" << endl;
		cout << "2 - Find the smaller balance" << endl;
		cout << "3 - Obtain the sum of all balances" << endl;
		cout << "4 - Obtain the average of all balances" << endl;
		cout << "5 - Find person" << endl;
		cout << "0 - Exit" << endl;
		cout << "Enter an option (0 to exit): ";

		cin >> menuOptionChosen;
		cin.ignore(10000, '\n');

		ofstream oFile;
		oFile.open(Global::outputFileName, ios::app);

		switch(menuOptionChosen) {
			case 0:
				//Exits the program...
				cout << "\nTerminating now!!!" << endl;
				break;
			case 1:
				//Find the larger balance...
				cout << "\nFinding the larger balance..." << endl;

				if(oFile.is_open()) {
					calculatedIndex = findSmallerOrLargerBalance(personsBalance, MAX_VALUES, menuOptionChosen);
					oFile << left;
					oFile << "\nThe largest balance is: " << endl;
					printRecordHeadingToFile();
				    oFile << left << setw(10)
				    		<< personsID[calculatedIndex] << setw(29) << personsFullName[calculatedIndex]
							<< " " << setw(4) << "$" << right << setprecision(2)
							<< fixed << personsBalance[calculatedIndex] << '\n' << '\n';
				}
				break;
			case 2:
				//Find the smaller balance...
				cout << "\nFinding the smaller balance..." << endl;

				if(oFile.is_open()) {
					calculatedIndex = findSmallerOrLargerBalance(personsBalance, MAX_VALUES, menuOptionChosen);
					oFile << left;
					oFile << "\nThe smallest balance is: " << endl;
					printRecordHeadingToFile();
					oFile << left << setw(10)
							<< personsID[calculatedIndex] << setw(29) << personsFullName[calculatedIndex]
							<< " " << setw(6) << "$" << right << setprecision(2)
							<< fixed << personsBalance[calculatedIndex] << '\n' << '\n';
				}
				break;
			case 3:
				//Obtain the sum of all balances...
				cout << "\nObtaining the sum of all balances..." << endl;

				if(oFile.is_open()) {
					calculatedResult = findSumOrAverageBalance(personsBalance, MAX_VALUES, menuOptionChosen);
					oFile << left;
					oFile << "\nThe sum of all persons balances: " << endl;
					oFile << setw(5) << "$" << right << calculatedResult << "\n\n";
				}

				break;
			case 4:
				//Obtain the average of all balances...
				cout << "\nObtaining the average of all balances..." << endl;

				if(oFile.is_open()) {
					calculatedResult = findSumOrAverageBalance(personsBalance, MAX_VALUES, menuOptionChosen);
					oFile << left;
					oFile << "\nThe average of all persons balances: " << endl;
					oFile << setw(5) << "$" << right << setprecision(2)
						  << fixed << calculatedResult << "\n\n";
				}
				break;
			case 5:
				//Find person...
				cout << "\nFinding person..." << endl;
				searchForPerson(personsFullName, MAX_VALUES);
				break;
			default:
				//code here
				cout << "\nPlease choose a valid menu option." << endl;
				break;
		}
	}
	return 0;
}
